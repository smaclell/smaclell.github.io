---
layout: post
title:  "The Secret For How To Build Anything"
date:   2014-09-22 23:11:07
tags: projects, lean, mvp
---

This is where the concept of an Minimum Viable Product kicks in. To remain
viable keeping your project easily releasable goes a long way. This can mean
simple things like knowing your last stable build or testing the deployment
after every commit. Focusing on the minimum helps streamline your effort and
provide that crucial foundation for future work.

The pressure of remaining releasable and focusing on the why will help keep
your Minimum Viable Product on track as shown by Bill Gross via Andrew Wilkinson.

<div class="center-image">
<blockquote class="twitter-tweet" lang="en"><p>Two different approaches for an MVP (Minimum Viable Product) via Andrew Wilkinson <a href="http://t.co/O1ZYYHT7z4">pic.twitter.com/O1ZYYHT7z4</a></p>&mdash; Bill Gross (@Bill_Gross) <a href="https://twitter.com/Bill_Gross/status/533828430606139392">November 16, 2014</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>

There is lots of fantastic ideas packed into how to approach your Minimum
Viable Product and shape your business one release at a time in the book
[Lean Startup][startup]. By shipping multiple small releases you can learn faster
what works or does not work about your product.

By getting that first release out early you can avoid many distractions along
the way. You can plan for eventualities but spending time building an
incredibly complicated system that only attract one user (hi mom!) is overkill.
This is why a simpler deployment initially is recommended. By all means
incorporate it into your continuous integration/deployment system but does not
need multi region deployments with automatic fail-over. Find your minimum and
iterate slowly to gradually become more comprehensive and robust.

[startup]:   http://www.amazon.com/Lean-Startup-Eric-Ries/dp/0670921602/ref=tmm_pap_swatch_0?_encoding=UTF8&sr=&qid=